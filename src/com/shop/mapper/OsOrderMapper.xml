<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shop.dao.OsOrderMapper">
  <resultMap id="BaseResultMap" type="com.shop.po.OsOrder">
    <id column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="order_number" jdbcType="BIGINT" property="orderNumber" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="pay_type" jdbcType="TINYINT" property="payType" />
    <result column="shipment_time" jdbcType="TINYINT" property="shipmentTime" />
    <result column="shipment_type" jdbcType="TINYINT" property="shipmentType" />
    <result column="shipment_amount" jdbcType="DECIMAL" property="shipmentAmount" />
    <result column="invoice_type" jdbcType="TINYINT" property="invoiceType" />
    <result column="invoice_title" jdbcType="VARCHAR" property="invoiceTitle" />
    <result column="order_status" jdbcType="TINYINT" property="orderStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="order_amount" jdbcType="DECIMAL" property="orderAmount" />
    <result column="order_score" jdbcType="INTEGER" property="orderScore" />
    <result column="pay_amount" jdbcType="DECIMAL" property="payAmount" />
    <result column="buy_number" jdbcType="INTEGER" property="buyNumber" />
  </resultMap>

  <resultMap id="OrderVOResultMap" type="com.shop.vo.OrderVO">
    <id column="order_id1" jdbcType="BIGINT" property="orderId" />
    <result column="order_number" jdbcType="BIGINT" property="orderNumber" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="pay_type" jdbcType="TINYINT" property="payType" />
    <result column="shipment_time" jdbcType="TINYINT" property="shipmentTime" />
    <result column="shipment_type" jdbcType="TINYINT" property="shipmentType" />
    <result column="shipment_amount" jdbcType="DECIMAL" property="shipmentAmount" />
    <result column="invoice_type" jdbcType="TINYINT" property="invoiceType" />
    <result column="invoice_title" jdbcType="VARCHAR" property="invoiceTitle" />
    <result column="order_status1" jdbcType="TINYINT" property="orderStatus" />
    <result column="create_time1" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time1" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="order_amount" jdbcType="DECIMAL" property="orderAmount" />
    <result column="order_score" jdbcType="INTEGER" property="orderScore" />
    <result column="pay_amount" jdbcType="DECIMAL" property="payAmount" />
    <result column="buy_number" jdbcType="INTEGER" property="buyNumber" />
    <association property="osOrderShipment" javaType="com.shop.po.OsOrderShipment">
      <id column="order_shipment_id4" jdbcType="BIGINT" property="orderShipmentId" />
      <result column="order_id4" jdbcType="BIGINT" property="orderId" />
      <result column="user_name4" jdbcType="VARCHAR" property="userName" />
      <result column="user_phone4" jdbcType="VARCHAR" property="userPhone" />
      <result column="user_adress4" jdbcType="VARCHAR" property="userAdress" />
      <result column="user_zipcode4" jdbcType="INTEGER" property="userZipcode" />
      <result column="update_time4" jdbcType="TIMESTAMP" property="updateTime" />
    </association>
    <collection property="orderProducts" ofType="com.shop.po.OsOrderProduct">
      <id column="order_product_id" jdbcType="BIGINT" property="orderProductId" />
      <result column="order_id2" jdbcType="BIGINT" property="orderId" />
      <result column="product_number" jdbcType="BIGINT" property="productNumber" />
      <result column="name" jdbcType="VARCHAR" property="name" />
      <result column="pic_img" jdbcType="VARCHAR" property="picImg" />
      <result column="product_spec_number" jdbcType="BIGINT" property="productSpecNumber" />
      <result column="product_spec_name" jdbcType="VARCHAR" property="productSpecName" />
      <result column="price" jdbcType="DECIMAL" property="price" />
      <result column="score" jdbcType="INTEGER" property="score" />
      <result column="buy_number2" jdbcType="INTEGER" property="buyNumber" />
      <result column="product_score" jdbcType="INTEGER" property="productScore" />
      <result column="product_amount" jdbcType="DECIMAL" property="productAmount" />
      <result column="comment_status" jdbcType="TINYINT" property="commentStatus" />
    </collection>
    <collection property="orderStatusList" ofType="com.shop.po.OsOrderStatus">
      <id column="order_status_id" jdbcType="BIGINT" property="orderStatusId" />
      <result column="order_id3" jdbcType="BIGINT" property="orderId" />
      <result column="order_status3" jdbcType="TINYINT" property="orderStatus" />
      <result column="create_time3" jdbcType="TIMESTAMP" property="createTime" />
      <result column="create_status" jdbcType="TINYINT" property="createStatus" />
      <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    </collection>

  </resultMap>

  <sql id="Base_Column_List">
    order_id, order_number, user_id, pay_type, shipment_time, shipment_type, shipment_amount, 
    invoice_type, invoice_title, order_status, create_time, update_time, order_amount, 
    order_score, pay_amount, buy_number
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from os_order
    where order_id = #{orderId,jdbcType=BIGINT}
  </select>

  <select id="selectByOrderNumber" parameterType="com.shop.po.OsOrder" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from os_order
    where order_number = #{orderNumber,jdbcType=BIGINT}
    and user_id = #{userId,jdbcType=BIGINT}
  </select>


  <select id="selectByUserId" parameterType="com.shop.vo.OrderVO" resultMap="OrderVOResultMap">
    SELECT
    oo.order_id AS order_id1, order_number, user_id, pay_type, shipment_time, shipment_type, shipment_amount,
    invoice_type, invoice_title, oo.order_status AS order_status1, oo.create_time AS create_time1, oo.update_time AS update_time1, order_amount,
    order_score, pay_amount, oo.buy_number AS buy_number1,
    order_product_id, oop.order_id AS order_id2, product_number, `name`, pic_img, product_spec_number, product_spec_name,
    price, score, oop.buy_number AS buy_number2, product_score, product_amount, comment_status,
    order_status_id, oos.order_id AS order_id3, oos.order_status AS order_status3, oos.create_time AS create_time3, create_status, remarks
    FROM
        os_order oo,
        os_order_product oop,
        os_order_status oos
    WHERE
        oo.order_id = oos.order_id
    AND oop.order_id = oo.order_id
    AND oo.user_id = #{userId,jdbcType=BIGINT}
    ORDER BY
        oos.create_time DESC
  </select>

  <select id="selectOrderVOByOrderNumber" parameterType="java.lang.Long" resultMap="OrderVOResultMap">
    SELECT
    oo.order_id AS order_id1, order_number, user_id, pay_type, shipment_time, shipment_type, shipment_amount,
    invoice_type, invoice_title, oo.order_status AS order_status1, oo.create_time AS create_time1, oo.update_time AS update_time1, order_amount,
    order_score, pay_amount, oo.buy_number AS buy_number1,
    order_product_id, oop.order_id AS order_id2, product_number, `name`, pic_img, product_spec_number, product_spec_name,
    price, score, oop.buy_number AS buy_number2, product_score, product_amount, comment_status,
    order_status_id, oos.order_id AS order_id3, oos.order_status AS order_status3, oos.create_time AS create_time3, create_status, remarks,
    order_shipment_id AS order_shipment_id4, oosh.order_id AS order_id4, user_name AS user_name4,
    user_phone AS user_phone4, user_adress AS user_adress4, user_zipcode AS user_zipcode4, oosh.update_time AS update_time4
    FROM
    os_order oo,
    os_order_product oop,
    os_order_status oos,
    os_order_shipment oosh
    WHERE
    oo.order_id = oos.order_id
    AND oop.order_id = oo.order_id
    AND oo.order_id = oosh.order_id
    AND oo.order_number = #{orderNumber,jdbcType=BIGINT}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from os_order
    where order_id = #{orderId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.shop.po.OsOrder">
    insert into os_order (order_id, order_number, user_id, 
      pay_type, shipment_time, shipment_type, 
      shipment_amount, invoice_type, invoice_title, 
      order_status, create_time, update_time, 
      order_amount, order_score, pay_amount, 
      buy_number)
    values (#{orderId,jdbcType=BIGINT}, #{orderNumber,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, 
      #{payType,jdbcType=TINYINT}, #{shipmentTime,jdbcType=TINYINT}, #{shipmentType,jdbcType=TINYINT}, 
      #{shipmentAmount,jdbcType=DECIMAL}, #{invoiceType,jdbcType=TINYINT}, #{invoiceTitle,jdbcType=VARCHAR}, 
      #{orderStatus,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{orderAmount,jdbcType=DECIMAL}, #{orderScore,jdbcType=INTEGER}, #{payAmount,jdbcType=DECIMAL}, 
      #{buyNumber,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.shop.po.OsOrder">
    <selectKey keyProperty="orderId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into os_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="orderNumber != null">
        order_number,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="payType != null">
        pay_type,
      </if>
      <if test="shipmentTime != null">
        shipment_time,
      </if>
      <if test="shipmentType != null">
        shipment_type,
      </if>
      <if test="shipmentAmount != null">
        shipment_amount,
      </if>
      <if test="invoiceType != null">
        invoice_type,
      </if>
      <if test="invoiceTitle != null">
        invoice_title,
      </if>
      <if test="orderStatus != null">
        order_status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="orderAmount != null">
        order_amount,
      </if>
      <if test="orderScore != null">
        order_score,
      </if>
      <if test="payAmount != null">
        pay_amount,
      </if>
      <if test="buyNumber != null">
        buy_number,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="orderNumber != null">
        #{orderNumber,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="payType != null">
        #{payType,jdbcType=TINYINT},
      </if>
      <if test="shipmentTime != null">
        #{shipmentTime,jdbcType=TINYINT},
      </if>
      <if test="shipmentType != null">
        #{shipmentType,jdbcType=TINYINT},
      </if>
      <if test="shipmentAmount != null">
        #{shipmentAmount,jdbcType=DECIMAL},
      </if>
      <if test="invoiceType != null">
        #{invoiceType,jdbcType=TINYINT},
      </if>
      <if test="invoiceTitle != null">
        #{invoiceTitle,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null">
        #{orderStatus,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderAmount != null">
        #{orderAmount,jdbcType=DECIMAL},
      </if>
      <if test="orderScore != null">
        #{orderScore,jdbcType=INTEGER},
      </if>
      <if test="payAmount != null">
        #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="buyNumber != null">
        #{buyNumber,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.shop.po.OsOrder">
    update os_order
    <set>
      <if test="orderNumber != null">
        order_number = #{orderNumber,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="payType != null">
        pay_type = #{payType,jdbcType=TINYINT},
      </if>
      <if test="shipmentTime != null">
        shipment_time = #{shipmentTime,jdbcType=TINYINT},
      </if>
      <if test="shipmentType != null">
        shipment_type = #{shipmentType,jdbcType=TINYINT},
      </if>
      <if test="shipmentAmount != null">
        shipment_amount = #{shipmentAmount,jdbcType=DECIMAL},
      </if>
      <if test="invoiceType != null">
        invoice_type = #{invoiceType,jdbcType=TINYINT},
      </if>
      <if test="invoiceTitle != null">
        invoice_title = #{invoiceTitle,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null">
        order_status = #{orderStatus,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderAmount != null">
        order_amount = #{orderAmount,jdbcType=DECIMAL},
      </if>
      <if test="orderScore != null">
        order_score = #{orderScore,jdbcType=INTEGER},
      </if>
      <if test="payAmount != null">
        pay_amount = #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="buyNumber != null">
        buy_number = #{buyNumber,jdbcType=INTEGER},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shop.po.OsOrder">
    update os_order
    set order_number = #{orderNumber,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      pay_type = #{payType,jdbcType=TINYINT},
      shipment_time = #{shipmentTime,jdbcType=TINYINT},
      shipment_type = #{shipmentType,jdbcType=TINYINT},
      shipment_amount = #{shipmentAmount,jdbcType=DECIMAL},
      invoice_type = #{invoiceType,jdbcType=TINYINT},
      invoice_title = #{invoiceTitle,jdbcType=VARCHAR},
      order_status = #{orderStatus,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      order_amount = #{orderAmount,jdbcType=DECIMAL},
      order_score = #{orderScore,jdbcType=INTEGER},
      pay_amount = #{payAmount,jdbcType=DECIMAL},
      buy_number = #{buyNumber,jdbcType=INTEGER}
    where order_id = #{orderId,jdbcType=BIGINT}
  </update>
</mapper>